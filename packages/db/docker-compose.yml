services:
  mongodb:
    image: mongo:7.0
    container_name: db-mongodb-dev
    profiles:
      - mongo
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-mongodb}
    volumes:
      - mongodb_data:/data/db
      - ./init-scripts/mongo:/docker-entrypoint-initdb.d
    networks:
      - db-network
    labels:
      - 'project=payload-nextjs-supabase'
      - 'service=database'
      - 'database=mongodb'
      - 'environment=development'

  postgres:
    image: postgres:16-alpine
    container_name: db-postgres-prod
    profiles:
      - postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts/postgres:/docker-entrypoint-initdb.d
    networks:
      - db-network
    labels:
      - 'project=payload-nextjs-supabase'
      - 'service=database'
      - 'database=postgres'
      - 'environment=production'

volumes:
  mongodb_data:
    name: mongodb-data
    labels:
      - 'project=payload-nextjs-supabase'
      - 'database=mongodb'
  postgres_data:
    name: postgres-data
    labels:
      - 'project=payload-nextjs-supabase'
      - 'database=postgres'

networks:
  db-network:
    name: db-network
    driver: bridge
    labels:
      - 'project=payload-nextjs-supabase'
